{"version":3,"file":"static/js/575.b2243edf.chunk.js","mappings":"gSAGaA,EAAOC,EAAAA,GAAAA,GAAH,wGAOJC,EAAYD,EAAAA,GAAAA,GAAH,oGAOTE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uE,SCUrB,EAvB0B,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gCACE,SAACP,EAAD,UAAM,mBAELK,EAAOG,OAAS,IACf,wBACGH,EAAOI,KAAI,SAAAC,GACV,OACE,SAACR,EAAD,WACE,SAACC,EAAD,CAAUQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAApD,SACGI,EAAMK,kBAFKL,EAAME,GAMzB,QAKV,E,UCuBD,EA3Ca,WACX,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6FACZF,GAAQ,GADI,mBAGeG,EAAAA,EAAAA,GACvB,4FAJQ,OAGJC,EAHI,OAOJnB,EAASmB,EAAWC,QAAQhB,KAAI,kBAA6B,CACjEG,GADoC,EAAGA,GAEvCG,eAFoC,EAAOA,eAAP,IAKtCG,EAAkBb,GAZR,gDAcVqB,QAAQC,IAAR,MAdU,yBAgBVP,GAAQ,GAhBE,4EAAH,qDAmBXE,GACD,GAAE,KAGD,iCACE,SAAC,EAAD,CAAmBjB,OAAQY,IAAmB,IAC7CE,IACC,SAAC,KAAD,CACES,YAAY,oBACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,MAKlB,C,kEC5CKT,EAAW,mCAAG,WAAMU,GAAN,uFACKC,EAAAA,EAAAA,IAAUD,GADf,cACZE,EADY,yBAGXA,EAASC,MAHE,2CAAH,sDAMjB,K","sources":["components/TrendingMovieList/TrendingMovieList.styled.jsx","components/TrendingMovieList/TrendingMovieList.jsx","pages/Home.jsx","servises/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Text = styled.h1`\n  margin: 0;\n  color: lightgrey;\n  font-weight: 400;\n  margin-bottom: 12px;\n`;\n\nexport const TrendItem = styled.li`\n  margin-left: 12px;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FilmLink = styled(Link)`\n  color: lightgrey;\n  text-decoration: none;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Text, FilmLink, TrendItem } from './TrendingMovieList.styled';\n\nconst TrendingMovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <section>\n      <Text>Trending today</Text>\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <TrendItem key={movie.id}>\n                <FilmLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.original_title}\n                </FilmLink>\n              </TrendItem>\n            );\n          })}\n        </ul>\n      )}\n    </section>\n  );\n};\n\nexport default TrendingMovieList;\n\nTrendingMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { useEffect, useState } from 'react';\nimport fetchMovies from 'servises/fetchMovies';\nimport TrendingMovieList from 'components/TrendingMovieList/TrendingMovieList';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst Home = () => {\n  const [moviesTrending, setMoviesTrending] = useState([]);\n  const [load, setLoad] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoad(true);\n      try {\n        const dataMovies = await fetchMovies(\n          'https://api.themoviedb.org/3/trending/movie/day?api_key=9218a8fe57d9a10810e7b861ea45534f'\n        );\n\n        const movies = dataMovies.results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n\n        setMoviesTrending(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoad(false);\n      }\n    };\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <TrendingMovieList movies={moviesTrending} />{' '}\n      {load && (\n        <RotatingLines\n          strokeColor=\"rgb(11, 127, 171)\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst fetchMovies = async url => {\n  const response = await axios.get(url);\n\n  return response.data;\n};\n\nexport default fetchMovies;\n"],"names":["Text","styled","TrendItem","FilmLink","Link","movies","location","useLocation","length","map","movie","to","id","state","from","original_title","useState","moviesTrending","setMoviesTrending","load","setLoad","useEffect","fetch","fetchMovies","dataMovies","results","console","log","strokeColor","strokeWidth","animationDuration","width","visible","url","axios","response","data"],"sourceRoot":""}